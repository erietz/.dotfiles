{
  "#!": {
    "prefix": "#!",
    "body": "`!p snip.rv = '#!/usr/bin/env ' + getShell() + \"\\n\" `",
    "description": "#!/usr/bin/env (!env)"
  },
  "sbash": {
    "prefix": "sbash",
    "body": "#!/usr/bin/env bash\nset -euo pipefail\nIFS=$'\\n\\t'\n`!p snip.rv ='\\n\\n' `",
    "description": "safe bash options"
  },
  "temp": {
    "prefix": "temp",
    "body": "${1:TMPFILE}=\"$(mktemp -t ${3:--suffix=${4:.SUFFIX}} ${2:`!p\nsnip.rv = re.sub(r'[^a-zA-Z]', '_', snip.fn) or \"untitled\"\n`}.XXXXXX)\"\n${5:${6/(.+)/trap \"/}${6:rm -f '$${1/.*\\s//}'}${6/(.+)/\" 0               # EXIT\\n/}${7/(.+)/trap \"/}${7:rm -f '$${1/.*\\s//}'; exit 1}${7/(.+)/\" 2       # INT\\n/}${8/(.+)/trap \"/}${8:rm -f '$${1/.*\\s//}'; exit 1}${8/(.+)/\" 1 15    # HUP TERM\\n/}}\n",
    "description": "Tempfile"
  },
  "/case|sw(itch)?/": {
    "prefix": "/case|sw(itch)?/",
    "body": "case ${1:word} in\n\t${2:pattern} )\n\t\t$0;;\nesac",
    "description": "case .. esac (case)"
  },
  "elif": {
    "prefix": "elif",
    "body": "elif ${2:[[ ${1:condition} ]]}; then\n\t$0",
    "description": "elif .. (elif)"
  },
  "for": {
    "prefix": "for",
    "body": "for (( i = 0; i < ${1:10}; i++ )); do\n\t$0\ndone",
    "description": "for ... done (for)"
  },
  "forin": {
    "prefix": "forin",
    "body": "for ${1:i}${2/.+/ in /}${2:words}; do\n\t$0\ndone",
    "description": "for ... in ... done (forin)"
  },
  "here": {
    "prefix": "here",
    "body": "<<-${2:'${1:TOKEN}'}\n\t$0\n${1/['\"`](.+)['\"`]/$1/}",
    "description": "here document (here)"
  },
  "if": {
    "prefix": "if",
    "body": "if ${2:[[ ${1:condition} ]]}; then\n\t$0\nfi",
    "description": "if ... then (if)"
  },
  "until": {
    "prefix": "until",
    "body": "until ${2:[[ ${1:condition} ]]}; do\n\t$0\ndone",
    "description": "until ... (done)"
  },
  "/wh(ile)?/": {
    "prefix": "/wh(ile)?/",
    "body": "while ${2:[[ ${1:condition} ]]}; do\n\t$0\ndone",
    "description": "while ... (done)"
  }
}