#!/bin/bash

BASEDIR="${HOME}/git/zettelkasten"
HELP=()

echoerr() {
    echo "$@" 1>&2;
}

add_help_string() {
    [ $# -eq 2 ] || {
        echoerr "add_help_string requires two parameters";
        exit 1;
    }

    HELP+=("$1:     $2")
}

print_help() {
    echo "--------------------------------------------------------------------"
    echo "Help"
    echo "--------------------------------------------------------------------"

    for string in "${HELP[@]}"; do
        echo "$string"
    done
}

add_help_string "add" "Creates a new note in the zettelkasten directory"
add() {
    now=$(date -u +%Y%m%d%H%M%S)
    new_dir="${BASEDIR}/${now}"
    new_file="${new_dir}/README.md"
    mkdir "$new_dir"
    touch "$new_file"
    $EDITOR "$new_file"
}

add_help_string "remove" "Deletes the most recent directory if the note is empty"
remove() {
    last_dir="${BASEDIR}/$(ls -tr "$BASEDIR" | tail -n1)"
    last_zet="${last_dir}/README.md"
    words=$(wc -w "$last_zet" | awk '{print $1}')
    if [ "$words" -eq 0 ]; then
         rm "$last_zet"
         rmdir "$last_dir"
     else
        echo "$last_zet is not empty"
        exit 1;
    fi
}

# main--------------------------------------------------------------------------

[ -d "$BASEDIR" ] || {
    echoerr "$BASEDIR does not exist ... please clone it";
    exit 1;
}

[ "$#" -eq 0 ] && print_help && exit 0

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        add|-a|--add)
            add
            shift
            ;;
        remove|-r|--remove)
            remove
            shift
            ;;
        *)
            print_help
            shift
            ;;
    esac
done
