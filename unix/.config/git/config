[user]
	email = ewrietz@gmail.com
	name = erietz
[alias]
	su = !git branch --set-upstream-to="origin/$(git branch --show-current)" "$(git branch --show-current)"
	st = status
	pu = pull
	ci = commit
	ca = commit -a
	br = branch
	co = checkout
	remaster = "!f() { git fetch && git rebase origin/master; }; f"
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	type = cat-file -t
	dump = cat-file -p
	pr = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
	pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
	ignore = update-index --assume-unchanged
	unignore = update-index --no-assume-unchanged
	ignored = !git ls-files -v | grep "^[[:lower:]]"
[init]
	defaultBranch = main
[pull]
	# Refuse to merge and exit with a non-zero status unless the current HEAD
	# is already up-to-date or the merge can be resolved as a fast-forward
	; ff=only
[core]
	# On UNIX, if files exist locally with CRLF, convert CRLF to LF on commit.
	# This should be set to `true` on Windows rather than `input`.
	autocrlf = input
